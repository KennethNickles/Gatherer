package com.kennethnickles.gatherer.card;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;

import com.google.common.base.Strings;
import com.google.common.collect.Lists;
import com.kennethnickles.gatherer.util.EnumUtils;

import java.util.List;

/**
 * @author kenneth.nickles
 * @since 2016-04-04.
 */
public enum Subtype {
    advisor,
    ajani,
    alara,
    ally,
    angel,
    antelope,
    ape,
    arcane,
    archer,
    archon,
    arkhos,
    arlinn,
    artificer,
    ashiok,
    assassin,
    assembly_worker("assembly-worker"),
    atog,
    aura,
    aurochs,
    avatar,
    azgol,
    badger,
    barbarian,
    basilisk,
    bat,
    bear,
    beast,
    beeble,
    belenon,
    berserker,
    bird,
    boar,
    bolas,
    bolass_meditation_realm("bolas’s meditation realm"),
    bringer,
    brushwagg,
    camel,
    carrier,
    cat,
    centaur,
    cephalid,
    chandra,
    chicken,
    chimera,
    cleric,
    cockatrice,
    construct,
    crab,
    crocodile,
    curse,
    cyclops,
    dack,
    daretti,
    dauthi,
    demon,
    desert,
    devil,
    djinn,
    dominaria,
    domri,
    dragon,
    drake,
    dreadnought,
    drone,
    druid,
    dryad,
    dwarf,
    efreet,
    elder,
    eldrazi,
    elemental,
    elephant,
    elf,
    elk,
    elspeth,
    equilor,
    equipment,
    ergamon,
    eye,
    fabacin,
    faerie,
    ferret,
    fish,
    flagbearer,
    forest,
    fortification,
    fox,
    freyalise,
    frog,
    fungus,
    gargoyle,
    garruk,
    gate,
    giant,
    gideon,
    gnome,
    goat,
    goblin,
    god,
    golem,
    gorgon,
    gremlin,
    griffin,
    hag,
    harpy,
    hellion,
    hippo,
    hippogriff,
    homarid,
    homunculus,
    horror,
    horse,
    hound,
    human,
    hydra,
    hyena,
    illusion,
    imp,
    incarnation,
    innistrad,
    insect,
    iquatana,
    ir,
    island,
    jace,
    jellyfish,
    juggernaut,
    kaldheim,
    kamigawa,
    karn,
    kavu,
    kephalai,
    kiora,
    kirin,
    kithkin,
    knight,
    kobold,
    kolbahan,
    kor,
    koth,
    kraken,
    kyneth,
    lair,
    lamia,
    lammasu,
    leech,
    legend,
    leviathan,
    lhurgoyf,
    licid,
    liliana,
    lizard,
    locus,
    lorwyn,
    manticore,
    masticore,
    mercadia,
    mercenary,
    merfolk,
    metathran,
    mine,
    minion,
    minotaur,
    mirrodin,
    moag,
    mole,
    monger,
    mongoose,
    mongseng,
    monk,
    moonfolk,
    mountain,
    muraganda,
    mutant,
    myr,
    mystic,
    naga,
    nahiri,
    narset,
    nautilus,
    nephilim,
    new_phyrexia("new phyrexia"),
    nightmare,
    nightstalker,
    ninja,
    nissa,
    nixilis,
    noggle,
    nomad,
    nymph,
    octopus,
    ogre,
    ooze,
    orc,
    orgg,
    ouphe,
    ox,
    oyster,
    pegasus,
    pest,
    phelddagrif,
    phoenix,
    phyrexia,
    pirate,
    plains,
    plant,
    power_plant,
    praetor,
    processor,
    rabbit,
    rabiah,
    ral,
    rat,
    rath,
    ravnica,
    rebel,
    regatha,
    rhino,
    rigger,
    rogue,
    sable,
    salamander,
    samurai,
    saproling,
    sarkhan,
    satyr,
    scarecrow,
    scorpion,
    scout,
    segovia,
    serpent,
    serras_realm("serra’s realm"),
    shade,
    shadowmoor,
    shaman,
    shandalar,
    shapeshifter,
    sheep,
    shrine,
    siren,
    skeleton,
    slith,
    sliver,
    slug,
    snake,
    soldier,
    soltari,
    sorin,
    spawn,
    specter,
    spellshaper,
    sphinx,
    spider,
    spike,
    spirit,
    sponge,
    squid,
    squirrel,
    starfish,
    surrakar,
    swamp,
    tamiyo,
    teferi,
    tezzeret,
    thalakos,
    thopter,
    thrull,
    tibalt,
    tower,
    trap,
    treefolk,
    troll,
    turtle,
    ugin,
    ulgrotha,
    unicorn,
    urzas("urza’s"),
    valla,
    vampire,
    vedalken,
    venser,
    viashino,
    volver,
    vraska,
    vryn,
    wall,
    warrior,
    weird,
    werewolf,
    whale,
    wildfire,
    wizard,
    wolf,
    wolverine,
    wombat,
    worm,
    wraith,
    wurm,
    xenagos,
    xerex,
    yeti,
    zendikar,
    zombie,
    zubera;

    private final String mName;

    Subtype() {
        this.mName = name();
    }

    Subtype(String name) {
        this.mName = name;
    }

    @NonNull
    public String getName() {
        return mName;
    }

    @Nullable
    public static Subtype from(String lookup) {
        if (Strings.isNullOrEmpty(lookup)) {
            return null;
        }
        for (Subtype subtype : values()) {
            if (EnumUtils.sanitize(subtype.name()).equals(EnumUtils.sanitize(lookup))) {
                return subtype;
            }
        }
        return null;
    }

    @Nullable
    public static List<Subtype> from(List<String> lookups) {
        if (lookups == null || lookups.isEmpty()) {
            return Lists.newArrayList();
        }
        final List<Subtype> types = Lists.newArrayList();
        for (String lookup : lookups) {
            types.add(from(lookup));
        }
        return types;
    }
}
